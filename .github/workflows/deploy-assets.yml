name: Deploy Assets

on:
  push:
    branches:
      - main
      - gh-pages-src
  workflow_dispatch:

jobs:
  deploy-and-generate:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout current branch
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Determine current branch
      - name: Set current branch
        id: vars
        run: echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      # 3Ô∏è‚É£ Checkout gh-pages-src branch (create if doesn't exist)
      - name: Checkout gh-pages-src
        run: |
          git fetch origin gh-pages-src:gh-pages-src || git checkout --orphan gh-pages-src
          git checkout gh-pages-src

      # 4Ô∏è‚É£ Remove old _temp folder and create new one
      - name: Prepare _temp folder
        run: |
          rm -rf _temp
          mkdir -p _temp

      # 5Ô∏è‚É£ Copy assets depending on trigger branch
      - name: Copy assets to _temp
        run: |
          if [ "$CURRENT_BRANCH" = "main" ]; then
            echo "Triggered from main, copying current files"
            shopt -s dotglob
            for item in ../*/ ; do
              [[ "$item" == .* ]] && continue
              rsync -av --exclude='.*' "$item" _temp/
            done
          else
            echo "Triggered from gh-pages-src, fetching main branch"
            git fetch origin main:main
            shopt -s dotglob
            for item in ../main/* ; do
              [[ "$item" == .* ]] && continue
              rsync -av --exclude='.*' "$item" _temp/
            done
          fi

      # 6Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      # 7Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: pip install mkdocs mkdocs-material pyyaml

      # 8Ô∏è‚É£ Run gen_docs.py to generate index.md and mkdocs.yml
      - name: Generate MkDocs pages
        run: python gen_docs.py

      # 9Ô∏è‚É£ Delete _temp folder after generation
      - name: Clean up _temp folder
        run: rm -rf _temp

      # üîü Commit & push changes
      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs mkdocs.yml
          git commit -m "Update projects and regenerate docs" || echo "No changes to commit"
          git push origin gh-pages-src

      # 1Ô∏è‚É£1Ô∏è‚É£ Build and deploy site
      - name: Build and deploy site
        run: mkdocs gh-deploy --force --clean
